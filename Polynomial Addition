//Polynomial Addition

#include <stdio.h>
#include <stdlib.h>

struct node {
    int coeff;
    int power;
    struct node *next;
};

struct node *creation(int coeff, int power) {
    struct node *newnode;
    newnode = (struct node *)malloc(sizeof(struct node));
    newnode->coeff = coeff;
    newnode->power = power;
    newnode->next = NULL;
    return newnode;
}

void insertion(struct node **head, int coeff, int power) {
    struct node *newnode = creation(coeff, power);
    if (*head == NULL || (*head)->power < power) {
        newnode->next = *head;
        *head = newnode;
    } else {
        struct node *temp = *head;
        while (temp->next != NULL && temp->next->power > power) {
            temp = temp->next;
        }
        newnode->next = temp->next;
        temp->next = newnode;
    }
}

void displaying(struct node *head) {
    if (head == NULL) {
        printf("NO ELEMENTS\n");
    } else {
        struct node *temp = head;
        while (temp != NULL) {
            if (temp->next != NULL)
                printf("%d^%d + ", temp->coeff, temp->power);
            else
                printf("%d^%d", temp->coeff, temp->power);
            temp = temp->next;
        }
        printf("\n");
    }
}

struct node *addition(struct node *poly1, struct node *poly2) {
    struct node *result = NULL;
    while (poly1 != NULL && poly2 != NULL) {
        if (poly1->power == poly2->power) {
            insertion(&result, poly1->coeff + poly2->coeff, poly1->power);
            poly1 = poly1->next;
            poly2 = poly2->next;
        } else if (poly1->power > poly2->power) {
            insertion(&result, poly1->coeff, poly1->power);
            poly1 = poly1->next;
        } else {
            insertion(&result, poly2->coeff, poly2->power);
            poly2 = poly2->next;
        }
    }
    while (poly1 != NULL) {
        insertion(&result, poly1->coeff, poly1->power);
        poly1 = poly1->next;
    }
    while (poly2 != NULL) {
        insertion(&result, poly2->coeff, poly2->power);
        poly2 = poly2->next;
    }
    return result;
}

int main() {
    struct node *poly1 = NULL, *poly2 = NULL, *result = NULL;
    int a, b, c, i;
    int x, y, z, j;
    printf("No. of elements in 1st polynomial: ");
    scanf("%d", &a);
    for (i = 0; i < a; i++) {
        printf("%d term (c and p): ", i + 1);
        scanf("%d %d", &b, &c);
        insertion(&poly1, b, c);
    }
    printf("\n");
    printf("No. of elements in 2nd polynomial: ");
    scanf("%d", &z);
    for (j = 0; j < z; j++) {
        printf("%d term (c and p): ", j + 1);
        scanf("%d %d", &x, &y);
        insertion(&poly2, x, y);
    }
    printf("\n");
    displaying(poly1);
    printf("\n");
    displaying(poly2);
    printf("\n");
    result = addition(poly1, poly2);
    displaying(result);
}
